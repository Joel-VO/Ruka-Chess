name: Rust CI/CD

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Clippy
        run: cargo clippy -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      
      - name: Debug build
        run: cargo build --verbose
      
      - name: Release build
        run: cargo build --release --verbose
      
      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-binary
          path: target/release

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      
      - name: Download release binary
        uses: actions/download-artifact@v3
        with:
          name: release-binary
          path: ./release
      
      - name: Make binaries executable
        run: find ./release -type f -name "*.so" -o -type f -not -name "*.d" -not -name "*.rlib" | xargs chmod +x || true
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
